@page "/Paginat"
<div>
    <button disabled="@IsFirstPage" @onclick="FirstPage">First</button>
    <button disabled="@IsFirstPage" @onclick="PreviousPage">Previous</button>
    <span>Page @CurrentPage of @TotalPages</span>
    <button disabled="@IsLastPage" @onclick="NextPage">Next</button>
    <button disabled="@IsLastPage" @onclick="LastPage">Last</button>
    <input @bind="PageSize" @bind:event="oninput" @bind:after="Pschanged" />
</div>
@code {
    //分页组件的一种实现方式，skip().take().也直接使用QuickGird组件。
    [Parameter]
    public int CurrentPage { get; set; }
    [Parameter]
    public int PageSize { get; set; } = 5;
    [Parameter]
    public int TotalPages { get; set; }
    private bool IsFirstPage => CurrentPage == 1;
    private bool IsLastPage => CurrentPage == TotalPages;
    [Parameter]
    public EventCallback<int> CurrentPageValueChanged { get; set; }
    [Parameter]
    public EventCallback<int> PageSizeChanged { get; set; }

    public async void Pschanged()
    {
        if (PageSizeChanged.HasDelegate)
        {
            await PageSizeChanged.InvokeAsync(PageSize);
        }
    }
    public async void FirstPage()
    {
        CurrentPage = 1;
        if (CurrentPageValueChanged.HasDelegate)
        {
            await CurrentPageValueChanged.InvokeAsync(CurrentPage);
        }
    }
    public async void NextPage()
    {
        CurrentPage++;
        if (CurrentPageValueChanged.HasDelegate)
        {
            await CurrentPageValueChanged.InvokeAsync(CurrentPage);
        }
    }
    public async void PreviousPage()
    {
        CurrentPage--;
        if (CurrentPageValueChanged.HasDelegate)
        {
            await CurrentPageValueChanged.InvokeAsync(CurrentPage);
        }
    }
    public async void LastPage()
    {
        CurrentPage = TotalPages;
        if (CurrentPageValueChanged.HasDelegate)
        {
            await CurrentPageValueChanged.InvokeAsync(CurrentPage);
        }
    }
}
